---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

interface Props {
  src: ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
}

const { src, alt, width = 56, height = 56, class: className = "" } = Astro.props;
---

<div class={`pill-reveal ${className}`} data-pill-reveal>
  <Image
    src={src}
    alt={alt}
    width={width}
    height={height}
    class="pill-reveal__image"
    loading="lazy"
    decoding="async"
  />
</div>

<script is:inline>
  const elements = document.querySelectorAll("[data-pill-reveal]");
  const observer = new IntersectionObserver(
    (entries, obs) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("is-visible");
          obs.unobserve(entry.target);
        }
      });
    },
    { rootMargin: "0px 0px -12% 0px", threshold: 0.4 }
  );
  elements.forEach((element) => observer.observe(element));
</script>

<style>
  .pill-reveal {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: fit-content;
    border-radius: 297px;
    overflow: hidden;
    opacity: 0;
    transform: translateY(12px);
    filter: blur(10px);
    transition:
      opacity 0.6s cubic-bezier(0.16, 1, 0.3, 1),
      transform 0.6s cubic-bezier(0.16, 1, 0.3, 1),
      filter 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  }

  .pill-reveal.is-visible {
    opacity: 1;
    transform: translateY(0);
    filter: blur(0);
  }

  .pill-reveal__image {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 297px;
  }

  @media (prefers-reduced-motion: reduce) {
    .pill-reveal {
      opacity: 1;
      transform: none;
      filter: none;
      transition: none;
    }
  }
</style>
