---
import ThemeToggle from "./ThemeToggle";
// import AudioButton from "./AudioButton";
import CTAButton from "./CTAButton";
import { trackEvent } from "~/lib/analytics";
// using public logo via <img>

const links = [
  { href: "/#projects", label: "Proyek" },
  { href: "/about", label: "Tentang" },
  { href: "/contact", label: "Kontak" },
];
---

<nav
  class="sticky top-0 z-50 bg-gradient-to-b from-bg via-bg/95 to-transparent backdrop-blur motion-safe:transition-transform motion-safe:duration-200 motion-safe:ease-out data-[state=hidden]:-translate-y-full"
  data-state="visible"
  data-nav
>
  <div class="mx-auto max-w-6xl px-6 pt-6">
    <div
      class="flex items-center justify-between gap-4 rounded-full border border-divider/60 bg-surface/70 px-6 py-4 text-sm shadow-subtle backdrop-blur"
    >
      <a
        class="focus-outline flex items-center gap-3 font-heading text-base font-semibold tracking-tight"
        href="/"
        aria-label="Beranda Mohammad Noor Wahid"
      >
        <!-- small screens: icon only -->
        <img
          src="/mylogo.svg"
          alt="Logo Mohammad Noor Wahid"
          class="block sm:hidden h-8 w-8 rounded-full border border-divider/70 bg-bg object-cover"
        />

        <!-- sm+ screens: icon + name -->
        <div class="hidden sm:flex items-center gap-3">
          <img
            src="/mylogo.svg"
            alt=""
            aria-hidden="true"
            class="h-10 w-10 rounded-full border border-divider/70 bg-bg object-cover"
          />
          <span class="text-text">NOAH IS ME</span>
        </div>
      </a>
      <div class="hidden items-center gap-7 md:flex">
        {
          links.map((link) => (
            <a
              class="focus-outline text-text2 transition-colors duration-200 hover:text-text"
              href={link.href}
            >
              {link.label}
            </a>
          ))
        }
        <CTAButton
          client:load
          className="ml-2"
          href="/contact"
          onClick={() => trackEvent("cta_nav_contact")}
        >
          Ajak Kolaborasi
        </CTAButton>
      </div>
      <div class="flex items-center gap-2">
        <!-- <AudioButton client:only="react" /> -->
        <ThemeToggle client:only="react" />
      </div>
    </div>
  </div>
</nav>

<script is:inline>
  const nav = document.querySelector("[data-nav]");
  const root = document.documentElement;

  if (nav) {
    let lastY = window.scrollY;
    const scrollThreshold = 12;
    const showOffset = 96;
    let ticking = false;

    const setState = (state) => {
      if (nav.dataset.state !== state) {
        nav.dataset.state = state;
      }
    };

    const prefersReducedMotion = () => root.dataset.motion === "reduced";

    const evaluate = () => {
      const currentY = window.scrollY;

      if (prefersReducedMotion()) {
        setState("visible");
        lastY = currentY;
        return;
      }

      if (currentY <= showOffset) {
        setState("visible");
      } else if (currentY - lastY > scrollThreshold) {
        setState("hidden");
      } else if (lastY - currentY > scrollThreshold) {
        setState("visible");
      }

      lastY = currentY;
    };

    window.addEventListener(
      "scroll",
      () => {
        if (ticking) return;
        ticking = true;
        requestAnimationFrame(() => {
          evaluate();
          ticking = false;
        });
      },
      { passive: true }
    );

    nav.addEventListener("mouseenter", () => setState("visible"));
    nav.addEventListener("focusin", () => setState("visible"));

    const query = window.matchMedia("(prefers-reduced-motion: reduce)");
    const handlePreference = (event) => {
      if (event.matches) {
        setState("visible");
      }
    };

    if (typeof query.addEventListener === "function") {
      query.addEventListener("change", handlePreference);
    } else if (typeof query.addListener === "function") {
      query.addListener(handlePreference);
    }

    evaluate();
  }
</script>
